plugins {
    id 'java-gradle-plugin'
}

apply plugin: 'groovy'
apply plugin: 'maven'

group 'org.feedhenry.tools'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    google()
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('build/libs'))
        }
    }

}

dependencies {
    compile 'com.android.tools.build:gradle:3.0.1'
    testCompile 'junit:junit:4.12'
    compile 'org.codehaus.groovy:groovy-all:2.4.11'

}
configurations.all {
    resolutionStrategy {
        force 'org.codehaus.groovy:groovy-all:2.4.11'
    }
}

gradlePlugin {
    plugins {
        mcpAndroidPlugin {
            id = "aerogear-android-plugin"
            implementationClass = "org.aerogear.android.ags.plugin.AeroGearMobileCorePlugin"
        }
    }
}
// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

// Add the classpath file to the test runtime classpath
dependencies {
    testRuntime files(createClasspathManifest)
}
